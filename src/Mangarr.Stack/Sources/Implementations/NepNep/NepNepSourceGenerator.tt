<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>

<#
    List<(string,string,string,bool)> models = new()
    {
        ("mangalife","Manga Life", "https://manga4life.com",false),
        ("mangasee","Manga See", "https://mangasee123.com",false)
    };

    foreach ((string, string, string, bool) model in models)
    {
        string fileName = $"{model.Item2.Replace(" ", string.Empty)}Source.g.cs";
        string filePath = Host.ResolvePath(fileName);

        string directoryName = Path.GetDirectoryName(filePath);
        string generatedPath = Path.Combine(directoryName, "Generated");

        if (!Directory.Exists(generatedPath))
            Directory.CreateDirectory(generatedPath);

        string generatedFilePath = Path.Combine(generatedPath, fileName);

        File.WriteAllText(generatedFilePath, GenerateClass(model));
    }
#>

<#+
    public string GenerateClass((string, string, string, bool) model)
    {
        return $@"// Auto generated

using Injectio.Attributes;
using Mangarr.Stack.Caching;
using Mangarr.Stack.Sources.Clients;

namespace Mangarr.Stack.Sources.Implementations.NepNep;

[RegisterSingleton<ISource>(Duplicate = DuplicateStrategy.Append)]
internal class {model.Item2.Replace(" ", string.Empty)}Source : NepNepSourceBase
{{
    protected override string Id => ""{model.Item1}"";
    protected override string Name => ""{model.Item2}"";
    protected override string Url => ""{model.Item3}"";
    protected override bool HasCloudflareProtection => {model.Item4.ToString().ToLower()};

    public {model.Item2.Replace(" ", string.Empty)}Source(
        GenericHttpClient genericHttpClient,
        CloudflareHttpClient cloudflareHttpClient,
        ILoggerFactory loggerFactory,
        ICachingService cachingService
    )
        : base(genericHttpClient, cloudflareHttpClient, loggerFactory, cachingService)
    {{
    }}
}}
";
    }
#>
